name: Stage 1 - CI Pipeline with Testing

on:
  push:
    branches:
      - testing

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      # Customer Service Testing
      - name: Install dependencies for Customer Service
        working-directory: ./backend/customer_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Run tests for Customer Service
        working-directory: ./backend/customer_service
        run: |
          echo "Running tests for Customer Service..."
          pytest tests/ -v --tb=short
        continue-on-error: false
      
      # Order Service Testing
      - name: Install dependencies for Order Service
        working-directory: ./backend/order_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Run tests for Order Service
        working-directory: ./backend/order_service
        run: |
          echo "Running tests for Order Service..."
          pytest tests/ -v --tb=short
        continue-on-error: false
      
      # Product Service Testing
      - name: Install dependencies for Product Service
        working-directory: ./backend/product_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Run tests for Product Service
        working-directory: ./backend/product_service
        run: |
          echo "Running tests for Product Service..."
          pytest tests/ -v --tb=short
        continue-on-error: false
      
      # Docker Build and Push (only if tests pass)
      - name: Login to Azure Container Registry
        if: success()
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      
      # Build and Push Customer Service
      - name: Build and push Customer Service image
        if: success()
        run: |
          echo "Building Customer Service Docker image..."
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ github.sha }} \
                       -t ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest \
                       ./backend/customer_service
          
          echo "Pushing Customer Service images to ACR..."
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest
          
          echo "✅ Customer Service images pushed successfully!"
      
      # Build and Push Order Service
      - name: Build and push Order Service image
        if: success()
        run: |
          echo "Building Order Service Docker image..."
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ github.sha }} \
                       -t ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest \
                       ./backend/order_service
          
          echo "Pushing Order Service images to ACR..."
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest
          
          echo "✅ Order Service images pushed successfully!"
      
      # Build and Push Product Service
      - name: Build and push Product Service image
        if: success()
        run: |
          echo "Building Product Service Docker image..."
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ github.sha }} \
                       -t ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest \
                       ./backend/product_service
          
          echo "Pushing Product Service images to ACR..."
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest
          
          echo "✅ Product Service images pushed successfully!"
      
      # Build and Push Frontend
      - name: Build and push Frontend image
        if: success()
        run: |
          echo "Building Frontend Docker image..."
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }} \
                       -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest \
                       ./frontend
          
          echo "Pushing Frontend images to ACR..."
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
          
          echo "✅ Frontend images pushed successfully!"
      
      - name: Pipeline Summary
        if: always()
        run: |
          echo "=========================================="
          echo "CI Pipeline Execution Summary"
          echo "=========================================="
          echo "Commit SHA: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Timestamp: $(date)"
          echo "=========================================="
          echo "Services Tested and Built:"
          echo "  - Customer Service (Python/FastAPI)"
          echo "  - Order Service (Python/FastAPI)"
          echo "  - Product Service (Python/FastAPI)"
          echo "  - Frontend (Static HTML/Nginx)"
          echo "=========================================="
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ All tests passed!"
            echo "✅ All Docker images built and pushed to ACR"
            echo "✅ Images tagged with:"
            echo "   - Commit SHA: ${{ github.sha }}"
            echo "   - Latest tag"
          else
            echo "❌ Pipeline failed"
            echo "❌ Images NOT pushed to ACR"
          fi
          echo "=========================================="
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "=========================================="
          echo "⚠️  PIPELINE FAILED"
          echo "=========================================="
          echo "Tests failed or build error occurred."
          echo "Docker images will NOT be pushed to ACR."
          echo "Please review the logs above and fix issues."
          echo "=========================================="
          exit 1
